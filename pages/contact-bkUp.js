import {useState} from 'react'
import Head from "next/head";
import Link from "next/link";
import Navbar from "../components/Navbar";

export default function Contactus({contactpage}) {

  // const [firstName, setFirstName] = useState('');
  
  const [searchValue, setsearchValue] = useState("Search Anything...");

  if (searchValue.length == 0) {
    setsearchValue("reset");
    // console.log('empty value');
  }
  
  function handleChange(e) {
    e.preventDefault();
    // console.log(event.target.value);
    //console.log(setsearchValue(e.target.value))
    // console.log(searchValue);

    // const searchField1 = contactpage[0].title.rendered.toLowerCase().includes(searchValue);
    // console.log(searchField1);
  }

  // const searchField1 = contactpage[0].title.rendered.toLowerCase().includes(searchValue);

  // const searchValueField = searchValue;
  
  //const homePageID = 5350;
  //console.log(searchValueField.includes(searchValue));

  // console.log(contactpage[0].slug);
  // console.log(`${contactpage[0].title.rendered}`);


  // console.log(contactpage);

  // let string1 = JSON.stringify(contactpage);
  // let parsestring1 = JSON.parse(string1);

  // console.log(parsestring1);


  // const names = ['James', 'John', 'Jhm Paul', 'Ringo', 'George'];

  // console.log(names)
  

  return (
    <>
      <Head>
        <title>Contact - Basic WP Setup</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container my-2">
        <Navbar />

        <h1>Contact Us</h1>

        <div className='my-3'>
          <form onSubmit={handleChange}>
            <label>
              Search: {searchValue}<br />
              <input type="text" name="searchValue" onChange={e => setsearchValue(e.target.value)} placeholder='Search'  />
            </label>
            <input type="submit" value="Submit" />
          </form>

          <div className='my-5 row'>
            {/* {contactpage.filter(post => post.title.rendered == searchValue).map(post => ( */}
            {/* {contactpage.filter(post => post.includes('Mobile')).map(post => (
              <div key={post.id} className="row">
                  <div className="col-md-6">
                      <h4>{post.title.rendered}</h4>
                      <div dangerouslySetInnerHTML={{__html: `${post.excerpt.rendered}`}}></div>
                  </div>
              </div>
            ))} */}

            {contactpage.filter(contpost => contpost.content.rendered.toLowerCase().includes(searchValue)).map(filteredPost => (
              <div key={filteredPost.id} className='col-md-4'>
                <div className="searchblock">
                      <h4>{filteredPost.title.rendered}</h4>
                      <div dangerouslySetInnerHTML={{__html: `${filteredPost.excerpt.rendered}`}}></div>
                  </div>
              </div>
            ))}
          </div>

        </div>

      </div>
    </>
  )
}

export async function getStaticProps() {
  // const res = await fetch('https://gridspective.com/Website-Demos/wp-react-next/wp-json/wp/v2/pages?acf_format=standard')
  // const res = await fetch('https://gridspective.com/Website-Demos/wp-react-next/wp-json/wp/v2/pages')
  const res = await fetch('https://redbytes.co.uk/wp-json/wp/v2/posts')
  const contactpage = await res.json();
  return {
    props: {
      contactpage,
    },
    revalidate: 10,
  }
}