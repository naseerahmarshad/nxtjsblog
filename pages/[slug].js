import {useState} from 'react'
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import Navbar from "../components/Navbar";

export default function Post({singlepost}) {
    const router = useRouter()

    if (router.isFallback) {
        return <div>Loading...</div>
    }

    console.log(singlepost[0].title.rendered);

    return (
        <>
        <Head>
        <title>{singlepost[0].title.rendered}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className="container my-2">
            <Navbar />

            <div className='my-5 row'>
                <h1>{singlepost[0].title.rendered}</h1>
                <div dangerouslySetInnerHTML={{__html: `${singlepost[0].content.rendered}`}}></div>


                {/* {searchPageData.filter(contpost => contpost.content.rendered.toLowerCase().includes(routerslug)).map(filteredPost => (
                    <div key={filteredPost.id} className='col-md-4'>
                    <div className="searchblock">
                        <h4>{filteredPost.title.rendered}</h4>
                        <div dangerouslySetInnerHTML={{__html: `${filteredPost.excerpt.rendered}`.substring(0, 200) + `...`}}></div>
                        <Link href={filteredPost.slug}>
                            <a className='btn btn-primary'>Know more</a>
                        </Link>
                    </div>
                    </div>
                ))} */}
            </div>
        </div>
    </>
    )
}


export async function getStaticPaths() {
    // Call an external API endpoint to get posts
    const res = await fetch('https://redbytes.co.uk/wp-json/wp/v2/posts')
    const posts = await res.json()

    // Get the paths we want to pre-render based on posts
    const paths = posts.map((post) => ({
        params: { slug: post.slug },
    }))

    // We'll pre-render only these paths at build time.
    // { fallback: false } means other routes should 404.
    return { paths, fallback: false }
}

export async function getStaticProps({params}) {
    // const res = await fetch('https://gridspective.com/Website-Demos/wp-react-next/wp-json/wp/v2/pages?acf_format=standard')
    // const res = await fetch('https://gridspective.com/Website-Demos/wp-react-next/wp-json/wp/v2/pages')
    const res = await fetch(`https://redbytes.co.uk/wp-json/wp/v2/posts?slug=${params.slug}`)
    const singlepost = await res.json();
    return {
      props: {
        singlepost,
      },
      revalidate: 10,
    }
  }